{
    "branches": ["main"],
    "plugins": [
      ["@semantic-release/commit-analyzer", {
        "preset": "angular",
        "releaseRules": [
          {"type": "docs", "scope": "README", "release": "patch"},
          {"type": "refactor", "release": "patch"},
          {"type": "style", "release": "patch"},
          {"type": "perf", "release": "patch"},
          {"type": "test", "release": "patch"}
        ]
      }],
      ["@semantic-release/release-notes-generator", {
        "preset": "angular",
        "writerOpts": {
          "groupBy": "type",
          "commitsSort": "header",
          "commitGroupsSort": [
            "feat",
            "fix",
            "perf",
            "refactor",
            "docs",
            "style",
            "test",
            "build",
            "ci",
            "chore"
          ],
          "groups": {
            "feat": {
              "title": ":sparkles: Features"
            },
            "fix": {
              "title": ":bug: Bug Fixes"
            },
            "perf": {
              "title": ":rocket: Performance Improvements"
            },
            "refactor": {
              "title": ":wrench: Code Refactoring"
            },
            "docs": {
              "title": ":books: Documentation"
            },
            "style": {
              "title": ":lipstick: Styles"
            },
            "test": {
              "title": ":white_check_mark: Tests"
            },
            "build": {
              "title": ":building_construction: Build System"
            },
            "ci": {
              "title": ":construction_worker: Continuous Integration"
            },
            "chore": {
              "title": ":wrench: Chores"
            }
          }
        }
      }],
      ["@semantic-release/git", {
        "assets": ["package.json"],
        "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
      }],
      ["@semantic-release/github", {
        "assets": [],
        "successComment": "üéâ This ${issue.pull_request ? 'PR is included' : 'issue is fixed'} in version ${nextRelease.version}",
        "failComment": "‚ùå Release failed due to an error",
        "failTitle": "Release Failed",
        "labels": ["released"],
        "releasedLabels": ["released"]
      }]
    ]
  } 